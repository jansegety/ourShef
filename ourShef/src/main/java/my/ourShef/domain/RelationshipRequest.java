package my.ourShef.domain;

import java.util.UUID;

import javax.persistence.Column;
import javax.persistence.Convert;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import lombok.Getter;
import lombok.Setter;
import my.ourShef.converter.RelationshipRequestStateConverter;
import my.ourShef.domain.constant.RelationshipRequestState;

/*
 * When an acquaintance request is created, 
 * two entities are created on both sides of the sender and the receiver, 
 * and each becomes the owner.
 */
@Entity
@Table(name = "relationship_request")
@Getter
public class RelationshipRequest {

	//generated by UUID
	@Id
	@Column(name="relationship_request_id", length = 36)
	private String id;
	
	@OneToOne
	@JoinColumn(name="owner_user_id")
	private User owner;
	
	@OneToOne
	@JoinColumn(name="from_user_id")
	private User fromUser;
	
	@OneToOne
	@JoinColumn(name="to_user_id")
	private User toUser;
	
	@Setter
	@Convert(converter = RelationshipRequestStateConverter.class)
	@Column(name = "state")
	private RelationshipRequestState state;
	
	
	protected RelationshipRequest() {}
	
	
	public RelationshipRequest(User fromUser, User toUser) {
		this.id = UUID.randomUUID().toString();
		this.fromUser = fromUser;
		this.toUser = toUser;
		this.state = RelationshipRequestState.BEFORE_CONFIRMATION;
	}
	
}
